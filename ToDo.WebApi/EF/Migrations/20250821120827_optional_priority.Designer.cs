// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToDo.WebApi.Domain;

#nullable disable

namespace ToDo.WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250821120827_optional_priority")]
    partial class optional_priority
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ToDo.WebApi.Domain.Entities.UserTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CompleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OwnerUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Priority")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UserTaskListId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserTaskListId");

                    b.ToTable("UserTasks");
                });

            modelBuilder.Entity("ToDo.WebApi.Domain.Entities.UserTaskFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Contents")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OwnerUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserTaskId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserTaskId");

                    b.ToTable("UserTaskFiles");
                });

            modelBuilder.Entity("ToDo.WebApi.Domain.Entities.UserTaskList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrderDirection")
                        .HasColumnType("integer");

                    b.Property<int>("OrderType")
                        .HasColumnType("integer");

                    b.Property<string>("OwnerUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserTaskLists");
                });

            modelBuilder.Entity("ToDo.WebApi.Domain.Entities.UserTask", b =>
                {
                    b.HasOne("ToDo.WebApi.Domain.Entities.UserTaskList", "TypeUserTaskList")
                        .WithMany("UserTasks")
                        .HasForeignKey("UserTaskListId");

                    b.Navigation("TypeUserTaskList");
                });

            modelBuilder.Entity("ToDo.WebApi.Domain.Entities.UserTaskFile", b =>
                {
                    b.HasOne("ToDo.WebApi.Domain.Entities.UserTask", "UserTask")
                        .WithMany()
                        .HasForeignKey("UserTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserTask");
                });

            modelBuilder.Entity("ToDo.WebApi.Domain.Entities.UserTaskList", b =>
                {
                    b.Navigation("UserTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
