@using AutoMapper
@using ToDo.Models

@inject HttpClient Http;
@inject IMapper mapper;

@code {
    public IEnumerable<UserTaskListModel>? Models { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Models = await Http.GetFromJsonAsync<List<UserTaskListModel>>("TaskList"); 
        await base.OnInitializedAsync();
    }

   

}

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ToDo</a>
    </div>
</div>



<div class="nav-scrollable" >
    <nav class="flex-column">

        @foreach (UserTaskListModel model in Models ?? Array.Empty<UserTaskListModel>())
        {
            <ListItemControl Id="model.Id" Model="mapper.Map<UserTaskListAddModel>(model)"></ListItemControl>
        }
        
        
        
        
        @* <div class="nav-item px-3"> *@
        @*     <NavLink class="nav-link" href="" Match="NavLinkMatch.All"> *@
        @*         <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> <ListControl></ListControl> *@
        @*     </NavLink> *@
        @* </div> *@
        @* *@
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        @* *@
        @* <div class="nav-item px-3"> *@
        @*     <NavLink class="nav-link" href="weather"> *@
        @*         <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather *@
        @*     </NavLink> *@
        @* </div> *@
    </nav>
</div>