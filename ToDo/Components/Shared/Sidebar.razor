@using ToDo.Models
@inject ITaskListApi ListApi
@code {
    private List<UserTaskListModel> lists = [];
    private string newList = "";

    protected override async Task OnInitializedAsync()
    {
        lists = await ListApi.GetListsAsync();
    }

    private async Task AddList()
    {
        if (!string.IsNullOrWhiteSpace(newList))
        {
            await ListApi.AddListAsync(new UserTaskListAddModel { Name = newList });
            newList = "";
            lists = await ListApi.GetListsAsync();
        }
    }

    private async Task DeleteList(Guid id)
    {
        await ListApi.DeleteListAsync(id);
        lists = await ListApi.GetListsAsync();
    }
}

<div class="sidebar">
    <h3>–°–ø–∏—Å–∫–∏</h3>

    <ul>
        @foreach (var l in lists)
        {
            <li>
                <NavLink href="@($"/list/{l.Id}")">@l.Name</NavLink>
                <button class="del" @onclick="() => DeleteList(l.Id)">üóë</button>
            </li>
        }
    </ul>

    <input @bind="newList" placeholder="–ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫..." />
    <button @onclick="AddList">+</button>
</div>